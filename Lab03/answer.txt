Question: Alternatively, to compare items in the cart, instead of using the Comparator class I have mentioned, you can use the Comparable interface1 and override the compareTo()method. You can refer to the Java docs to see the information of this interface.
1. What class should implement the Comparable interface?
- Nên thiết lập Comparable<Media> cho class Media.
- Vì Media là lớp cha của Book, DVD, CD,... nên việc định nghĩa thứ tự sắp xếp tự nhiên ở đây giúp quản lý và sắp xếp danh sách media một cách thống nhất.

2. In those classes, how should you implement the compareTo()method to reflect the ordering that we want?
- Để sắp xếp theo tiêu đề tăng dần, nếu tiêu đề trùng nhau thì theo giá giảm dần:
public int compareTo(Media other) {
    int titleCompare = this.title.compareTo(other.title);
    if (titleCompare != 0) {
        return titleCompare;
    }
    return Float.compare(other.cost, this.cost);
}

3. Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach? 
- Không thể có nhiều cách sắp xếp khác nhau. Comparable chỉ hỗ trợ một cách sắp xếp duy nhất (thông qua phương thức compareTo()).
- Nếu muốn nhiều kiểu sắp xếp (ví dụ: theo giá rồi tiêu đề, hoặc tiêu đề rồi độ dài,...), ta sử dụng Comparator để linh hoạt hơn.

4. Suppose the DVDs have a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?
- Ta override compareTo() trong lớp DigitalVideoDisc:

public int compareTo(Media other) {
    if (other instanceof DigitalVideoDisc) {
        DigitalVideoDisc dvd = (DigitalVideoDisc) other;
        
        int titleCompare = this.title.compareTo(dvd.title);
        if (titleCompare != 0) {
            return titleCompare;
        }

        int lengthCompare = Integer.compare(dvd.length, this.length); // giảm dần
        if (lengthCompare != 0) {
            return lengthCompare;
        }

        return Float.compare(this.cost, dvd.cost); // tăng dần
    }
    return super.compareTo(other);
}
